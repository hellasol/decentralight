{
  "fileName": "ERC20Faucet.sol",
  "contractName": "ERC20Faucet",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\ncontract ERC20Faucet is Initializable{\n    IERC20 private _token;\n\n    function initialize(IERC20 token) public {\n        _token = token;\n    }\n\n    function withdraw() public {\n        _token.transfer(msg.sender, 1);\n    }\n}",
  "sourcePath": "contracts/ERC20Faucet.sol",
  "sourceMap": "171:225:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;171:225:3;;;;;;;;;;",
  "deployedSourceMap": "171:225:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;171:225:3;;;;;;;;;;;;;;;;;;;;;;;;;;320:74;;;:::i;:::-;;242:72;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;242:72:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;320:74;357:6;;;;;;;;;;;:15;;;373:10;385:1;357:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;357:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;357:30:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;357:30:3;;;;;;;;;;;;;;;;;320:74;:::o;242:72::-;302:5;293:6;;:14;;;;;;;;;;;;;;;;;;242:72;;:::o",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/ERC20Faucet.sol",
    "exportedSymbols": {
      "ERC20Faucet": [
        221
      ]
    },
    "id": 222,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 192,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
        "id": 193,
        "nodeType": "ImportDirective",
        "scope": 222,
        "sourceUnit": 69,
        "src": "25:83:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 194,
        "nodeType": "ImportDirective",
        "scope": 222,
        "sourceUnit": 138,
        "src": "109:60:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 195,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 137,
              "src": "195:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$137",
                "typeString": "contract Initializable"
              }
            },
            "id": 196,
            "nodeType": "InheritanceSpecifier",
            "src": "195:13:3"
          }
        ],
        "contractDependencies": [
          137
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 221,
        "linearizedBaseContracts": [
          221,
          137
        ],
        "name": "ERC20Faucet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 198,
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 221,
            "src": "214:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$68",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 197,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 68,
              "src": "214:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$68",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "283:31:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 203,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "293:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$68",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "302:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$68",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "293:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$68",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "293:14:3"
                }
              ]
            },
            "documentation": null,
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "262:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$68",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 199,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 68,
                    "src": "262:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$68",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:14:3"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:3"
            },
            "scope": 221,
            "src": "242:72:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "347:47:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "373:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "373:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "385:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "357:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$68",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "357:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "357:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "357:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:2:3"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:3"
            },
            "scope": 221,
            "src": "320:74:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 222,
        "src": "171:225:3"
      }
    ],
    "src": "0:396:3"
  },
  "bytecode": "0x60806040523480156100115760006000fd5b50610017565b6101f6806100266000396000f3fe60806040523480156100115760006000fd5b506004361061003b5760003560e01c80633ccfd60b14610041578063c4d66de81461004b5761003b565b60006000fd5b610049610090565b005b61008e600480360360208110156100625760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061017c565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561013b5760006000fd5b505af1158015610150573d600060003e3d6000fd5b505050506040513d60208110156101675760006000fd5b8101908080519060200190929190505050505b565b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5056fea265627a7a72315820351820d0739a496ecaea0c8c0a43ea0ed33418991372768b6fa0fe6da2f68e6d64736f6c63430005110032",
  "deployedBytecode": "0x60806040523480156100115760006000fd5b506004361061003b5760003560e01c80633ccfd60b14610041578063c4d66de81461004b5761003b565b60006000fd5b610049610090565b005b61008e600480360360208110156100625760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061017c565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561013b5760006000fd5b505af1158015610150573d600060003e3d6000fd5b505050506040513d60208110156101675760006000fd5b8101908080519060200190929190505050505b565b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5056fea265627a7a72315820351820d0739a496ecaea0c8c0a43ea0ed33418991372768b6fa0fe6da2f68e6d64736f6c63430005110032",
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang",
    "optimizer": {},
    "evmVersion": "constantinople"
  },
  "networks": {
    "42": {
      "links": {},
      "events": {},
      "address": "0xab15562508f02ef741AAD1Ca45D8bf886981F92D",
      "updated_at": 1586113434657
    }
  }
}